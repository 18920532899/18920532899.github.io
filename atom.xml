<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>My blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-09-17T11:40:46.740Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>SuJiaxin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>yolov8</title>
    <link href="http://example.com/2023/10/24/yolov8/"/>
    <id>http://example.com/2023/10/24/yolov8/</id>
    <published>2023-10-24T07:42:15.000Z</published>
    <updated>2024-09-17T11:40:46.740Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>YOLOv8 是由 YOLOv5 的发布者 Ultralytics 发布的最新版本的 YOLO。它可用于对象检测、分割、分类任务以及大型数据集的学习，并且可以在包括 CPU 和 GPU 在内的各种硬件上执行。</p><h1 id="在autodl上使用yolov8进行图像训练并进行推理"><a href="#在autodl上使用yolov8进行图像训练并进行推理" class="headerlink" title="在autodl上使用yolov8进行图像训练并进行推理"></a>在autodl上使用yolov8进行图像训练并进行推理</h1><h2 id="步骤1-学术资源加载（加速下载操作）"><a href="#步骤1-学术资源加载（加速下载操作）" class="headerlink" title="步骤1 学术资源加载（加速下载操作）"></a>步骤1 学术资源加载（加速下载操作）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/network_turbo</span><br></pre></td></tr></table></figure><p><img src="/pic/1.png" alt="alt"></p><h2 id="步骤2-在GitHub上克隆ultralytics相关代码"><a href="#步骤2-在GitHub上克隆ultralytics相关代码" class="headerlink" title="步骤2 在GitHub上克隆ultralytics相关代码"></a>步骤2 在GitHub上克隆ultralytics相关代码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/ultralytics/ultralytics</span><br></pre></td></tr></table></figure><p><img src="/pic/2.png" alt="alt"><br><img src="/pic/3.png" alt="alt"></p><h3 id="注意：该操作结束后注意切换当前目录到ultralytics"><a href="#注意：该操作结束后注意切换当前目录到ultralytics" class="headerlink" title="注意：该操作结束后注意切换当前目录到ultralytics"></a>注意：该操作结束后注意切换当前目录到ultralytics</h3><h2 id="步骤3-下载相关库"><a href="#步骤3-下载相关库" class="headerlink" title="步骤3 下载相关库"></a>步骤3 下载相关库</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple/</span><br><span class="line">pip install ultralytics -i https://pypi.tuna.tsinghua.edu.cn/simple/</span><br><span class="line">pip install torch==1.9.0+cu111 torchvision==0.10.0+cu111 torchaudio===0.9.0 -f https://download.pytorch.org/whl/torch_stable.html</span><br></pre></td></tr></table></figure><p><img src="/pic/4.png" alt="alt"><br><img src="/pic/5.png" alt="alt"><br><img src="/pic/6.png" alt="alt"></p><h2 id="步骤4-训练代码"><a href="#步骤4-训练代码" class="headerlink" title="步骤4 训练代码"></a>步骤4 训练代码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yolo task=detect mode=train model=yolov8x.pt data=data.yaml epochs=300 batch=32</span><br></pre></td></tr></table></figure><h3 id="各个参数的含义"><a href="#各个参数的含义" class="headerlink" title="各个参数的含义"></a>各个参数的含义</h3><p>1.task&#x3D;detect  本次工作为检测工作<br>2.mode&#x3D;train   模式为训练模式<br>3.data&#x3D;data.yaml    操作数据在data.yaml文件中<br>4.epochs&#x3D;300   总共训练的次数<br>5.batch&#x3D;32     检测到错误时要使用的默认批大小</p><p>官方文档：<a href="https://docs.ultralytics.com/">https://docs.ultralytics.com/</a></p><p><img src="/pic/7.png" alt="alt"><br>该位置为训练结果存储的位置<br>该位置下生成的best.pt为训练的成果<br><img src="/pic/8.png" alt="alt"></p><h2 id="步骤5-将图片解压缩到指定位置"><a href="#步骤5-将图片解压缩到指定位置" class="headerlink" title="步骤5 将图片解压缩到指定位置"></a>步骤5 将图片解压缩到指定位置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip autodl-fs/yoloShuiDao.zip -d yolo //yolo为ultralytics文件夹中用来存储数据的文件夹</span><br></pre></td></tr></table></figure><h2 id="步骤5-推理，注意model和source的路径，以及目录位置"><a href="#步骤5-推理，注意model和source的路径，以及目录位置" class="headerlink" title="步骤5 推理，注意model和source的路径，以及目录位置"></a>步骤5 推理，注意model和source的路径，以及目录位置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yolo task=detect mode=predict model=ultralytics/best.pt conf=0.6 source=&#x27;ultralytics/blasst-96-_jpg.rf.a8a96709d718a08b57069b5d0b44235b.jpg&#x27;</span><br></pre></td></tr></table></figure><p><img src="/pic/9.png" alt="alt"><br>标红处为推理出的图片位置<br><img src="/pic/10.png" alt="alt"></p><h1 id="Anaconda进行图像推理"><a href="#Anaconda进行图像推理" class="headerlink" title="Anaconda进行图像推理"></a>Anaconda进行图像推理</h1><h2 id="步骤1-安装yolov8"><a href="#步骤1-安装yolov8" class="headerlink" title="步骤1 安装yolov8"></a>步骤1 安装yolov8</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n yolov8 python=3.7</span><br></pre></td></tr></table></figure><p><img src="/pic/11.png" alt="alt"></p><h2 id="步骤2-安装相关库"><a href="#步骤2-安装相关库" class="headerlink" title="步骤2 安装相关库"></a>步骤2 安装相关库</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install ultralytics -i https://pypi.tuna.tsinghua.edu.cn/simple/</span><br></pre></td></tr></table></figure><p><img src="/pic/12.png" alt="alt"></p><h2 id="步骤3-推理，注意model和source的路径"><a href="#步骤3-推理，注意model和source的路径" class="headerlink" title="步骤3 推理，注意model和source的路径"></a>步骤3 推理，注意model和source的路径</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yolo task=detect mode=predict model=&quot;D:\Anaconda3\envs\yolov8\best.pt&quot; conf=0.6 source=&quot;E:\wechat\WeChat Files\wxid_rdr3w49kp7xe12\FileStorage\File\2023-10\train\images\blasst-125-_jpg.rf.5ac8efd0a7760dba0065e381c7917956.jpg&quot;</span><br></pre></td></tr></table></figure><p><img src="/pic/13.png" alt="alt"></p><h1 id="如何自定义数据集"><a href="#如何自定义数据集" class="headerlink" title="如何自定义数据集"></a>如何自定义数据集</h1><h2 id="各部分之间的功能"><a href="#各部分之间的功能" class="headerlink" title="各部分之间的功能"></a>各部分之间的功能</h2><p>1.train     训练集<br>2.test      测试集<br>3.valid     验证集</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>142环形链表</title>
    <link href="http://example.com/2023/10/07/142%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8/"/>
    <id>http://example.com/2023/10/07/142%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8/</id>
    <published>2023-10-07T03:48:29.000Z</published>
    <updated>2023-10-13T08:51:55.891Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="142-环形链表"><a href="#142-环形链表" class="headerlink" title="142.环形链表"></a>142.环形链表</h1><h2 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h2><p>给定一个链表的头节点  head ，返回链表开始入环的第一个节点。 如果链表无环，则返回 null。</p><p>如果链表中有某个节点，可以通过连续跟踪 next 指针再次到达，则链表中存在环。 为了表示给定链表中的环，评测系统内部使用整数 pos 来表示链表尾连接到链表中的位置（索引从 0 开始）。如果 pos 是 -1，则在该链表中没有环。注意：pos 不作为参数进行传递，仅仅是为了标识链表的实际情况。</p><p>不允许修改 链表。</p><h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例 #1"></a>样例 #1</h2><h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入#1"></a>输入#1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head = [3,2,0,-4], pos = 1</span><br></pre></td></tr></table></figure><h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出#1"></a>输出#1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">返回索引为 1 的链表节点</span><br></pre></td></tr></table></figure><h3 id="解释-1"><a href="#解释-1" class="headerlink" title="解释#1"></a>解释#1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">链表中有一个环，其尾部连接到第二个节点。</span><br></pre></td></tr></table></figure><h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例 #2"></a>样例 #2</h2><h3 id="输入-2"><a href="#输入-2" class="headerlink" title="输入#2"></a>输入#2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head = [1,2], pos = 0</span><br></pre></td></tr></table></figure><h3 id="输出-2"><a href="#输出-2" class="headerlink" title="输出#2"></a>输出#2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">返回索引为 0 的链表节点</span><br></pre></td></tr></table></figure><h3 id="解释-2"><a href="#解释-2" class="headerlink" title="解释#2"></a>解释#2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">链表中有一个环，其尾部连接到第一个节点。</span><br></pre></td></tr></table></figure><h2 id="样例-3"><a href="#样例-3" class="headerlink" title="样例 #3"></a>样例 #3</h2><h3 id="输入-3"><a href="#输入-3" class="headerlink" title="输入#3"></a>输入#3</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head = [1], pos = -1</span><br></pre></td></tr></table></figure><h3 id="输出-3"><a href="#输出-3" class="headerlink" title="输出#3"></a>输出#3</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">返回 null</span><br></pre></td></tr></table></figure><h3 id="解释-3"><a href="#解释-3" class="headerlink" title="解释#3"></a>解释#3</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">链表中没有环。</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>链表中节点的数目范围在范围 [0, 104] 内<br>-105 &lt;&#x3D; Node.val &lt;&#x3D; 105<br>pos 的值为 -1 或者链表中的一个有效索引</p><h2 id="解法1"><a href="#解法1" class="headerlink" title="解法1"></a>解法1</h2><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>从第一个节点开始，找他前面的所有节点地址，如果与当前节点地址相同，则有环，若当前节点为空，则证明无环</p><p>缺点：费时费地</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">struct ListNode *detectCycle(struct ListNode *head) &#123;</span><br><span class="line">    struct ListNode* past;</span><br><span class="line">    struct ListNode* current = head;</span><br><span class="line">    int len, i;</span><br><span class="line">    for (len = 0; current != NULL; len ++,current = current-&gt;next, past = head)&#123;</span><br><span class="line">        for (i = 0; i &lt; len; i++, past = past-&gt;next)&#123;</span><br><span class="line">            if (current == past)</span><br><span class="line">                return past;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return NULL;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解法2"><a href="#解法2" class="headerlink" title="解法2"></a>解法2</h2><h2 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h2><p>利用数学知识求解，运用快慢指针的方法，分别定义 fast 和 slow指针，从头结点出发，fast指针每次移动两个节点，slow指针每次移动一个节点，如果 fast 和 slow指针在途中相遇 ，说明这个链表有环。<br>若有环，从头结点出发一个指针，从相遇节点 也出发一个指针，这两个指针每次只走一个节点， 那么当这两个指针相遇的时候就是 环形入口的节点</p><h2 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">ListNode *detectCycle(ListNode *head) &#123;</span><br><span class="line">    ListNode* fast = head;</span><br><span class="line">    ListNode* slow = head;</span><br><span class="line">    while(fast != NULL &amp;&amp; fast-&gt;next != NULL) &#123;</span><br><span class="line">        slow = slow-&gt;next;</span><br><span class="line">        fast = fast-&gt;next-&gt;next;</span><br><span class="line">        // 快慢指针相遇，此时从head 和 相遇点，同时查找直至相遇</span><br><span class="line">        if (slow == fast) &#123;</span><br><span class="line">            ListNode* index1 = fast;</span><br><span class="line">            ListNode* index2 = head;</span><br><span class="line">            while (index1 != index2) &#123;</span><br><span class="line">                index1 = index1-&gt;next;</span><br><span class="line">                index2 = index2-&gt;next;</span><br><span class="line">            &#125;</span><br><span class="line">            return index2; // 返回环的入口</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return NULL;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>43.字符串相乘</title>
    <link href="http://example.com/2023/09/18/43-%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E4%B9%98/"/>
    <id>http://example.com/2023/09/18/43-%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E4%B9%98/</id>
    <published>2023-09-18T14:35:18.000Z</published>
    <updated>2023-09-18T14:52:47.786Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="43-字符串相乘"><a href="#43-字符串相乘" class="headerlink" title="43.字符串相乘"></a>43.字符串相乘</h1><h2 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h2><p>给定两个以字符串形式表示的非负整数 num1 和 num2，返回 num1 和 num2 的乘积，它们的乘积也表示为字符串形式。</p><p>注意：不能使用任何内置的 BigInteger 库或直接将输入转换为整数。</p><h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例 #1"></a>样例 #1</h2><h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入 #1"></a>输入 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">num1 = &quot;2&quot;, num2 = &quot;3&quot;</span><br></pre></td></tr></table></figure><h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出 #1"></a>输出 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;6&quot;</span><br></pre></td></tr></table></figure><h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例 #2"></a>样例 #2</h2><h3 id="输入-2"><a href="#输入-2" class="headerlink" title="输入 #2"></a>输入 #2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">num1 = &quot;123&quot;, num2 = &quot;456&quot;</span><br></pre></td></tr></table></figure><h3 id="输出-2"><a href="#输出-2" class="headerlink" title="输出 #2"></a>输出 #2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;56088&quot;</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>1 &lt;&#x3D; num1.length, num2.length &lt;&#x3D; 200<br>num1 和 num2 只能由数字组成。<br>num1 和 num2 都不包含任何前导零，除了数字0本身。</p><h2 id="解法1"><a href="#解法1" class="headerlink" title="解法1"></a>解法1</h2><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>将字符型数组变成整型直接相乘，在变为字符型数组，但是本题数据太大，无法用int存储</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">char * multiply(char * num1, char * num2)</span><br><span class="line">&#123;</span><br><span class="line">    int len1 = strlen (num1);</span><br><span class="line">    int len2 = strlen (num2);</span><br><span class="line">    int i, n1 = 0, n2 = 0, n, len = 0;</span><br><span class="line">    char* num;</span><br><span class="line">    for (i = 0; i &lt; len1; i++)&#123;</span><br><span class="line">        n1 = n1 * 10 + num1[i] - 48;</span><br><span class="line">    &#125;</span><br><span class="line">    for (i = 0; i &lt; len2; i++)&#123;</span><br><span class="line">        n2 = n2 * 10 + num2[i] - 48;</span><br><span class="line">    &#125;</span><br><span class="line">    n = n1 * n2;</span><br><span class="line">    if (n == 0)&#123;</span><br><span class="line">        len = 1;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        while (n != 0 || n % 10 != 0)&#123;</span><br><span class="line">            n = n / 10;</span><br><span class="line">            len++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    n = n1 * n2;</span><br><span class="line">    num = malloc(sizeof(char) * (len + 1));</span><br><span class="line">    for (i = len - 1; i &gt;= 0; i--)&#123;</span><br><span class="line">        num[i] = n % 10 + 48;</span><br><span class="line">        n = n / 10;</span><br><span class="line">    &#125;</span><br><span class="line">    num[len]=&#x27;\0&#x27;;</span><br><span class="line">    return num;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解法2"><a href="#解法2" class="headerlink" title="解法2"></a>解法2</h2><h2 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h2><p>利用高精度乘法进行计算，注意数组的溢出以及字符型数组以\0结尾</p><h2 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">char * multiply(char * num1, char * num2)&#123;</span><br><span class="line">    int len1 = strlen( num1 );</span><br><span class="line">    int len2 = strlen( num2 );</span><br><span class="line">    int len = len1 + len2;</span><br><span class="line">    int i, j, k, x = 0;</span><br><span class="line">    int *num;</span><br><span class="line">    char *n;</span><br><span class="line">    num = calloc( len, sizeof( int ) );</span><br><span class="line">    for( i = len1 -1; i &gt;= 0; i-- )&#123;</span><br><span class="line">        for( j = len2 - 1,k = x; j &gt;= 0; j--, k++ )&#123;</span><br><span class="line">            num[k] = (num1[i] - 48) * (num2[j] - 48) + num[k];//逆序相乘正序储存</span><br><span class="line">            if( num[k] &gt; 9 &amp;&amp; k +1 &lt; len )&#123;</span><br><span class="line">                num[k+1] = num[k] / 10 + num[k+1];</span><br><span class="line">                num[k] = num[k] % 10;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        x++;</span><br><span class="line">    &#125;</span><br><span class="line">    if( num[len - 1] != 0 )&#123;</span><br><span class="line">        len++;</span><br><span class="line">    &#125;</span><br><span class="line">    if( num[len - 2] == 0 )&#123;</span><br><span class="line">        n = malloc( sizeof( char ) * 2 );</span><br><span class="line">        n[0]=&#x27;0&#x27;;</span><br><span class="line">        n[1]=&#x27;\0&#x27;;//避免00000的出现</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        n = malloc( sizeof( char ) * len );</span><br><span class="line">        for( i = 0; i &lt; len -1; i++ )&#123;</span><br><span class="line">            n[i] = num[len - i - 2] + 48;//整型数组位数少</span><br><span class="line">        &#125;</span><br><span class="line">        n[i] = &#x27;\0&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line">    return n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>6.N字形变换</title>
    <link href="http://example.com/2023/09/18/6-N%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/"/>
    <id>http://example.com/2023/09/18/6-N%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/</id>
    <published>2023-09-18T14:25:46.000Z</published>
    <updated>2023-09-18T14:52:16.725Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="6-N字形变换"><a href="#6-N字形变换" class="headerlink" title="6.N字形变换"></a>6.N字形变换</h1><h2 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h2><p>将一个给定字符串 s 根据给定的行数 numRows ，以从上往下、从左到右进行 Z 字形排列。</p><p>比如输入字符串为 “PAYPALISHIRING” 行数为 3 时，排列如下：</p><p>P   A   H   N<br>A P L S I I G<br>Y   I   R<br>之后，你的输出需要从左往右逐行读取，产生出一个新的字符串，比如：”PAHNAPLSIIGYIR”。</p><p>请你实现这个将字符串进行指定行数变换的函数：</p><p>string convert(string s, int numRows);</p><h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例 #1"></a>样例 #1</h2><h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入 #1"></a>输入 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s = &quot;PAYPALISHIRING&quot;, numRows = 3</span><br></pre></td></tr></table></figure><h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出 #1"></a>输出 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;PAHNAPLSIIGYIR&quot;</span><br></pre></td></tr></table></figure><h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例 #2"></a>样例 #2</h2><h3 id="输入-2"><a href="#输入-2" class="headerlink" title="输入 #2"></a>输入 #2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s = &quot;PAYPALISHIRING&quot;, numRows = 4</span><br></pre></td></tr></table></figure><h3 id="输出-2"><a href="#输出-2" class="headerlink" title="输出 #2"></a>输出 #2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;PINALSIGYAHRPI&quot;</span><br></pre></td></tr></table></figure><h2 id="样例-3"><a href="#样例-3" class="headerlink" title="样例 #3"></a>样例 #3</h2><h3 id="输入-3"><a href="#输入-3" class="headerlink" title="输入 #3"></a>输入 #3</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s = &quot;A&quot;, numRows = 1</span><br></pre></td></tr></table></figure><h3 id="输出-3"><a href="#输出-3" class="headerlink" title="输出 #3"></a>输出 #3</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;A&quot;</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>1 &lt;&#x3D; s.length &lt;&#x3D; 1000<br>s 由英文字母（小写和大写）、’,’ 和 ‘.’ 组成<br>1 &lt;&#x3D; numRows &lt;&#x3D; 1000</p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>首先可以发现排序有一定的周期2*numRows-2（numRows&gt;1），可以想到取余来找规律</p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">char * convert(char * s, int numRows)</span><br><span class="line">&#123;</span><br><span class="line">    int i, n = 1, j = 0, k = 0;</span><br><span class="line">    int len = strlen (s);</span><br><span class="line">    char * ch;</span><br><span class="line">    ch = malloc( sizeof( char ) * ( len + 1 ));</span><br><span class="line">    for ( i = 0; i &lt; numRows; i++ )&#123;</span><br><span class="line">        for ( j = 0; j &lt; len; j++ )&#123;</span><br><span class="line">            if( j % (2 * numRows -2) == i || j % (2 * numRows - 2) == 2 * numRows - 2 - i )&#123;</span><br><span class="line">                ch[k] = s[j];</span><br><span class="line">                k++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ch[k]= &#x27;\0&#x27;;</span><br><span class="line">    return ch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>34查找元素第一个位置和最后一个位置</title>
    <link href="http://example.com/2023/09/15/34%E6%9F%A5%E6%89%BE%E5%85%83%E7%B4%A0%E7%AC%AC%E4%B8%80%E4%B8%AA%E4%BD%8D%E7%BD%AE%E5%92%8C%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E4%BD%8D%E7%BD%AE/"/>
    <id>http://example.com/2023/09/15/34%E6%9F%A5%E6%89%BE%E5%85%83%E7%B4%A0%E7%AC%AC%E4%B8%80%E4%B8%AA%E4%BD%8D%E7%BD%AE%E5%92%8C%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E4%BD%8D%E7%BD%AE/</id>
    <published>2023-09-15T11:50:07.000Z</published>
    <updated>2023-09-15T12:36:59.652Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="34-在排序数组中查找元素的第一个和最后一个位置"><a href="#34-在排序数组中查找元素的第一个和最后一个位置" class="headerlink" title="34. 在排序数组中查找元素的第一个和最后一个位置"></a>34. 在排序数组中查找元素的第一个和最后一个位置</h1><h2 id="题目要求"><a href="#题目要求" class="headerlink" title="题目要求"></a>题目要求</h2><p>给你一个按照非递减顺序排列的整数数组 nums，和一个目标值 target。请你找出给定目标值在数组中的开始位置和结束位置。</p><p>如果数组中不存在目标值 target，返回 [-1, -1]。</p><p>你必须设计并实现时间复杂度为 O(log n) 的算法解决此问题。</p><h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例 #1"></a>样例 #1</h2><h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入 #1"></a>输入 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nums = [5,7,7,8,8,10], target = 8</span><br></pre></td></tr></table></figure><h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出 #1"></a>输出 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[3,4]</span><br></pre></td></tr></table></figure><h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例 #2"></a>样例 #2</h2><h3 id="输入-2"><a href="#输入-2" class="headerlink" title="输入 #2"></a>输入 #2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nums = [5,7,7,8,8,10], target = 6</span><br></pre></td></tr></table></figure><h3 id="输出-2"><a href="#输出-2" class="headerlink" title="输出 #2"></a>输出 #2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[-1,-1]</span><br></pre></td></tr></table></figure><h2 id="样例-3"><a href="#样例-3" class="headerlink" title="样例 #3"></a>样例 #3</h2><h3 id="输入-3"><a href="#输入-3" class="headerlink" title="输入 #3"></a>输入 #3</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nums = [], target = 0</span><br></pre></td></tr></table></figure><h3 id="输出-3"><a href="#输出-3" class="headerlink" title="输出 #3"></a>输出 #3</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[-1,-1]</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>0 &lt;&#x3D; nums.length &lt;&#x3D; 105<br>-109 &lt;&#x3D; nums[i] &lt;&#x3D; 109<br>nums 是一个非递减数组<br>-109 &lt;&#x3D; target &lt;&#x3D; 109</p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>看到提示说明，时间复杂度为O(log n)，想到用二分法查找<br>1.先进行二分法查找，找到目标值的位置<br>2.在目标值左侧进行二分查找，找到目标值的第一个位置<br>3.在目标值右侧进行二分查找，找到目标值的最后一个位置</p><h2 id="代码展示"><a href="#代码展示" class="headerlink" title="代码展示"></a>代码展示</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">int* searchRange(int* nums, int numsSize, int target, int* returnSize)&#123;</span><br><span class="line">    int left,right,mid;</span><br><span class="line">    int local,local1,local2;</span><br><span class="line">    int *LOCAL;</span><br><span class="line">    LOCAL=(int*)malloc(2*sizeof(int));</span><br><span class="line">    *returnSize=2;</span><br><span class="line">    if(numsSize!=0)&#123;</span><br><span class="line">    left=0;</span><br><span class="line">    right=numsSize-1;</span><br><span class="line">    mid=(left+right)/2;</span><br><span class="line">    while(mid&gt;=0&amp;&amp;mid&lt;numsSize&amp;&amp;nums[mid]!=target&amp;&amp;left&lt;right)&#123;</span><br><span class="line">        if(nums[mid]&lt;target)&#123;</span><br><span class="line">            left=mid+1;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            right=mid-1;</span><br><span class="line">        &#125;</span><br><span class="line">        mid=(left+right)/2;</span><br><span class="line">    &#125;</span><br><span class="line">    if(left&gt;right||nums[mid]!=target)&#123;</span><br><span class="line">        local1=-1;</span><br><span class="line">        local2=-1;</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        local=mid;</span><br><span class="line">        right=mid;</span><br><span class="line">        left=0;</span><br><span class="line">        mid=(left+right)/2;</span><br><span class="line">        while(!((mid==0||(mid!=0&amp;&amp;nums[mid-1]!=target))&amp;&amp;nums[mid]==target))&#123;</span><br><span class="line">            if(nums[mid]==target)&#123;</span><br><span class="line">                right=mid-1;</span><br><span class="line">            &#125;</span><br><span class="line">            else&#123;</span><br><span class="line">                left=mid+1;</span><br><span class="line">            &#125;</span><br><span class="line">            mid=(left+right)/2;</span><br><span class="line">        &#125;</span><br><span class="line">        local1=mid;</span><br><span class="line">        left=local;</span><br><span class="line">        right=numsSize-1;</span><br><span class="line">        mid=(left+right)/2;</span><br><span class="line">        while(!((mid==numsSize-1||(mid!=numsSize-1&amp;&amp;nums[mid+1]!=target))&amp;&amp;nums[mid]==target))&#123;</span><br><span class="line">            if(nums[mid]==target)&#123;</span><br><span class="line">                left=mid+1;</span><br><span class="line">            &#125;</span><br><span class="line">            else&#123;</span><br><span class="line">                right=mid-1;</span><br><span class="line">            &#125;</span><br><span class="line">            mid=(left+right)/2;</span><br><span class="line">        &#125;</span><br><span class="line">        local2=mid;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        local1=-1;</span><br><span class="line">        local2=-1;</span><br><span class="line">    &#125;</span><br><span class="line">    LOCAL[0]=local1;</span><br><span class="line">    LOCAL[1]=local2;</span><br><span class="line">    return LOCAL;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解法优化"><a href="#解法优化" class="headerlink" title="解法优化"></a>解法优化</h2><p>不必进行第一次二分查找找到目标值，直接进行二分查找找第一个位置和最后一个位置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">#if defined(MY_TEST)</span><br><span class="line"></span><br><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line"></span><br><span class="line">static int* str_to_array(char* str, int* numsSize) &#123;</span><br><span class="line">int* arr = malloc(4096 * sizeof(int)), n = 0;</span><br><span class="line">char buf[4096], * p;</span><br><span class="line">strcpy(buf, str);</span><br><span class="line">for (p = strtok(buf, &quot;, []&quot;); p != NULL; p = strtok(NULL, &quot;, []&quot;))</span><br><span class="line">arr[n++] = strtol(p, 0, 0);</span><br><span class="line">*numsSize = n;</span><br><span class="line">return arr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int* searchRange(int* nums, int numsSize, int target, int* returnSize);</span><br><span class="line"></span><br><span class="line">static void test(char* str, int target) &#123;</span><br><span class="line">int n, * arr = str_to_array(str, &amp;n);</span><br><span class="line">int* res = searchRange(arr, n, target, &amp;n);</span><br><span class="line">printf(&quot;[%d,%d]\n&quot;, res[0], res[1]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">test(&quot;[5, 7, 7, 8, 8, 10]&quot;, 8);  // �����[3, 4]</span><br><span class="line">test(&quot;[5, 7, 7, 8, 8, 10]&quot;, 6);  //�����[-1, -1]</span><br><span class="line">test(&quot;[]&quot;, 0); //�����[-1, -1]</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">int* searchRange(int* nums, int numsSize, int target, int* returnSize)</span><br><span class="line">&#123;</span><br><span class="line">    int left = 0, right = numsSize, mid;</span><br><span class="line">    static int ans[2];</span><br><span class="line"></span><br><span class="line">    ans[0] = ans[1] = -1;</span><br><span class="line"></span><br><span class="line">    while (left &lt; right) &#123;</span><br><span class="line">        mid = (left + right) / 2;</span><br><span class="line">        if (nums[mid] &gt;= target)</span><br><span class="line">            right = mid;</span><br><span class="line">        else</span><br><span class="line">            left = mid + 1;</span><br><span class="line">    &#125;</span><br><span class="line">    if (left == numsSize || nums[left] != target)</span><br><span class="line">        return ans;</span><br><span class="line">    ans[0] = left;</span><br><span class="line"></span><br><span class="line">    left = 0;</span><br><span class="line">    right = numsSize;</span><br><span class="line">    while (left &lt; right) &#123;</span><br><span class="line">        mid = (left + right) / 2;</span><br><span class="line">        if (nums[mid] &lt;= target)</span><br><span class="line">            left = mid + 1;</span><br><span class="line">        else</span><br><span class="line">            right = mid;</span><br><span class="line">    &#125;</span><br><span class="line">    ans[1] = left;</span><br><span class="line">    return ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>P1008三连击</title>
    <link href="http://example.com/2023/08/27/P1008%E4%B8%89%E8%BF%9E%E5%87%BB/"/>
    <id>http://example.com/2023/08/27/P1008%E4%B8%89%E8%BF%9E%E5%87%BB/</id>
    <published>2023-08-27T05:53:44.000Z</published>
    <updated>2023-08-27T06:07:14.333Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="NOIP1998-普及组-三连击"><a href="#NOIP1998-普及组-三连击" class="headerlink" title="[NOIP1998 普及组] 三连击"></a>[NOIP1998 普及组] 三连击</h1><h2 id="题目背景"><a href="#题目背景" class="headerlink" title="题目背景"></a>题目背景</h2><p>本题为提交答案题，您可以写程序或手算在本机上算出答案后，直接提交答案文本，也可提交答案生成程序。</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>将 $1, 2, \ldots , 9$ 共 $9$ 个数分成 $3$ 组，分别组成 $3$ 个三位数，且使这 $3$ 个三位数构成 $1 : 2 : 3$ 的比例，试求出所有满足条件的 $3$ 个三位数。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>无</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>若干行，每行 $3$ 个数字。按照每行第 $1$ 个数字升序排列。</p><h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例 #1"></a>样例 #1</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入 #1"></a>样例输入 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">无</span><br></pre></td></tr></table></figure><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出 #1"></a>样例输出 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">192 384 576</span><br><span class="line">* * *</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">* * *</span><br><span class="line">（剩余部分不予展示）</span><br></pre></td></tr></table></figure><h1 id="主要思路"><a href="#主要思路" class="headerlink" title="主要思路"></a>主要思路</h1><p>1.将数的每一位用数组储存<br>2.比较数组间的数字是否有重复或者是0的情况</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">int same(int x,int y)</span><br><span class="line">&#123;</span><br><span class="line">    int a[3];</span><br><span class="line">    int b[3];</span><br><span class="line">    int i,j,num=1;</span><br><span class="line">    for(i=0;i&lt;=2;i++)&#123;</span><br><span class="line">        a[i]=x%10;</span><br><span class="line">        x=x/10;</span><br><span class="line">        b[i]=y%10;</span><br><span class="line">        y=y/10;</span><br><span class="line">    &#125;</span><br><span class="line">    for(i=0;i&lt;=2;i++)&#123;</span><br><span class="line">        for(j=0;j&lt;=2;j++)&#123;</span><br><span class="line">            if((a[i]==b[j])||(a[i]==0)||(b[j]==0))&#123;</span><br><span class="line">                num=0;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        if(num==0)&#123;</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if(num==1)&#123;</span><br><span class="line">    for(i=0;i&lt;=2;i++)&#123;</span><br><span class="line">        for(j=i+1;j&lt;=2;j++)&#123; //从第i+1开始，防止重复比较</span><br><span class="line">            if(a[i]==a[j]||b[i]==b[j])&#123;</span><br><span class="line">                num=0;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        if(num==0)&#123;</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return num;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="易错点"><a href="#易错点" class="headerlink" title="易错点"></a>易错点</h2><p>没有进行自身数字相等的检查，导致222,444,666此类数的出现</p><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int same(int x,int y);</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int a,b,c;</span><br><span class="line">    for(a=192;a&lt;333;a++)</span><br><span class="line">    &#123;</span><br><span class="line">        b=a*2;</span><br><span class="line">        c=a*3;</span><br><span class="line">        if(same(a,b)==1&amp;&amp;same(a,c)==1&amp;&amp;same(b,c)==1)&#123;</span><br><span class="line">            printf(&quot;%d %d %d\n&quot;,a,b,c);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line">int same(int x,int y)</span><br><span class="line">&#123;</span><br><span class="line">    int a[3];</span><br><span class="line">    int b[3];</span><br><span class="line">    int i,j,num=1;</span><br><span class="line">    for(i=0;i&lt;=2;i++)&#123;</span><br><span class="line">        a[i]=x%10;</span><br><span class="line">        x=x/10;</span><br><span class="line">        b[i]=y%10;</span><br><span class="line">        y=y/10;</span><br><span class="line">    &#125;</span><br><span class="line">    for(i=0;i&lt;=2;i++)&#123;</span><br><span class="line">        for(j=0;j&lt;=2;j++)&#123;</span><br><span class="line">            if((a[i]==b[j])||(a[i]==0)||(b[j]==0))&#123;</span><br><span class="line">                num=0;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        if(num==0)&#123;</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if(num==1)&#123;</span><br><span class="line">    for(i=0;i&lt;=2;i++)&#123;</span><br><span class="line">        for(j=i+1;j&lt;=2;j++)&#123;</span><br><span class="line">            if(a[i]==a[j]||b[i]==b[j])&#123;</span><br><span class="line">                num=0;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        if(num==0)&#123;</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return num;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="优化筛选"><a href="#优化筛选" class="headerlink" title="优化筛选"></a>优化筛选</h1><p>只需判断九个数相加是否为1+2+3+4+5+6+7+8+9并且九个数相乘是否为9!即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int a,b,c;</span><br><span class="line">    for(a=123;a&lt;=333;a++)</span><br><span class="line">            &#123;</span><br><span class="line">                b=a*2;</span><br><span class="line">                c=a*3;</span><br><span class="line">                if((a/100+a/10%10+a%10+b/100+b/10%10+b%10+c/100+c/10%10+c%10==1+2+3+4+5+6+7+8+9)&amp;&amp;((a/100)*(a/10%10)*(a%10)*(b/100)*(b/10%10)*(b%10)*(c/100)*(c/10%10)*(c%10)==(1)*(2)*(3)*(4)*(5)*(6)*(7)*(8)*(9)))</span><br><span class="line">                    printf(&quot;%d %d %d\n&quot;,a,b,c);</span><br><span class="line">            &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>P1029最大公约数和最小公倍数问题</title>
    <link href="http://example.com/2023/08/08/P1029%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%E5%92%8C%E6%9C%80%E5%B0%8F%E5%85%AC%E5%80%8D%E6%95%B0%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2023/08/08/P1029%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%E5%92%8C%E6%9C%80%E5%B0%8F%E5%85%AC%E5%80%8D%E6%95%B0%E9%97%AE%E9%A2%98/</id>
    <published>2023-08-08T06:32:56.000Z</published>
    <updated>2023-08-08T06:38:33.753Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="NOIP2001-普及组-最大公约数和最小公倍数问题"><a href="#NOIP2001-普及组-最大公约数和最小公倍数问题" class="headerlink" title="[NOIP2001 普及组] 最大公约数和最小公倍数问题"></a>[NOIP2001 普及组] 最大公约数和最小公倍数问题</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>输入两个正整数 $x_0, y_0$，求出满足下列条件的 $P, Q$ 的个数：</p><ol><li><p>$P,Q$ 是正整数。</p></li><li><p>要求 $P, Q$ 以 $x_0$ 为最大公约数，以 $y_0$ 为最小公倍数。</p></li></ol><p>试求：满足条件的所有可能的 $P, Q$ 的个数。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>一行两个正整数 $x_0, y_0$。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>一行一个数，表示求出满足条件的 $P, Q$ 的个数。</p><h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例 #1"></a>样例 #1</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入 #1"></a>样例输入 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 60</span><br></pre></td></tr></table></figure><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出 #1"></a>样例输出 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>$P,Q$ 有 $4$ 种：</p><ol><li>$3, 60$。</li><li>$15, 12$。</li><li>$12, 15$。</li><li>$60, 3$。</li></ol><p>对于 $100%$ 的数据，$2 \le x_0, y_0 \le {10}^5$。</p><p><strong>【题目来源】</strong></p><p>NOIP 2001 普及组第二题</p><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><h2 id="主要思路"><a href="#主要思路" class="headerlink" title="主要思路"></a>主要思路</h2><p>第一步：找出既是最大公约数x的倍数，又是最小公倍数y的的因数的数记为num<br>第二步：找到n，使得n<em>num&#x3D;x</em>y<br>第三步：判断n和num的最大公因数是否为x</p><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">int change(int num,int x,int y);</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int x,y,num,i=0,right;</span><br><span class="line">    scanf(&quot;%d%d&quot;,&amp;x,&amp;y);</span><br><span class="line">    num=x;</span><br><span class="line">    while (num&lt;=y)</span><br><span class="line">    &#123;</span><br><span class="line">        if(y%num==0)&#123;</span><br><span class="line">            if(change(num,x,y)==1)&#123;</span><br><span class="line">               i++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        num=num+x;</span><br><span class="line">    &#125;</span><br><span class="line">    printf(&quot;%d\n&quot;,i);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line">int change(int num,int x,int y)</span><br><span class="line">&#123;</span><br><span class="line">    int n;</span><br><span class="line">    n=x*y/num;</span><br><span class="line">    if(min(num,n,x))&#123;</span><br><span class="line">        return 1;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line">int min(int num,int n,int x)</span><br><span class="line">&#123;</span><br><span class="line">    int mid;</span><br><span class="line">    if(num&lt;n)&#123;</span><br><span class="line">        mid=num;</span><br><span class="line">        num=n;</span><br><span class="line">        n=mid;</span><br><span class="line">    &#125;</span><br><span class="line">    while(num%n!=0)&#123;</span><br><span class="line">        mid=num%n;</span><br><span class="line">        num=n;</span><br><span class="line">        n=mid;</span><br><span class="line">    &#125;</span><br><span class="line">    if(n==x)&#123;</span><br><span class="line">        return 1;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>P1028数的计算</title>
    <link href="http://example.com/2023/08/08/P1028%E6%95%B0%E7%9A%84%E8%AE%A1%E7%AE%97/"/>
    <id>http://example.com/2023/08/08/P1028%E6%95%B0%E7%9A%84%E8%AE%A1%E7%AE%97/</id>
    <published>2023-08-08T06:25:33.000Z</published>
    <updated>2023-08-08T06:42:17.978Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="NOIP2001-普及组-数的计算"><a href="#NOIP2001-普及组-数的计算" class="headerlink" title="[NOIP2001 普及组] 数的计算"></a>[NOIP2001 普及组] 数的计算</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给出正整数 $n$，要求按如下方式构造数列：</p><ol><li>只有一个数字 $n$ 的数列是一个合法的数列。</li><li>在一个合法的数列的末尾加入一个正整数，但是这个正整数不能超过该数列最后一项的一半，可以得到一个新的合法数列。</li></ol><p>请你求出，一共有多少个合法的数列。两个合法数列 $a, b$ 不同当且仅当两数列长度不同或存在一个正整数 $i \leq |a|$，使得 $a_i \neq b_i$。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入只有一行一个整数，表示 $n$。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出一行一个整数，表示合法的数列个数。</p><h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例 #1"></a>样例 #1</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入 #1"></a>样例输入 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出 #1"></a>样例输出 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><h3 id="样例-1-解释"><a href="#样例-1-解释" class="headerlink" title="样例 1 解释"></a>样例 1 解释</h3><p>满足条件的数列为：</p><ul><li>$6$</li><li>$6, 1$</li><li>$6, 2$</li><li>$6, 3$</li><li>$6, 2, 1$</li><li>$6, 3, 1$</li></ul><h3 id="数据规模与约定"><a href="#数据规模与约定" class="headerlink" title="数据规模与约定"></a>数据规模与约定</h3><p>对于全部的测试点，保证 $1 \leq n \leq 10^3$。</p><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>本题数据来源是 NOIP 2001 普及组第一题，但是原题的题面描述和数据不符，故对题面进行了修改，使之符合数据。原题面如下，谨供参考：</p><blockquote><p>我们要求找出具有下列性质数的个数（包含输入的正整数 $n$）。</p><p>先输入一个正整数 $n$（$n \le 1000$），然后对此正整数按照如下方法进行处理：</p><ol><li>不作任何处理；</li><li>在它的左边拼接一个正整数，但该正整数不能超过原数，或者是上一个被拼接的数的一半；</li><li>加上数后，继续按此规则进行处理，直到不能再加正整数为止。</li></ol></blockquote><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><h2 id="主要思路"><a href="#主要思路" class="headerlink" title="主要思路"></a>主要思路</h2><p><img src="/pic/answer.jpg" alt="img"><br>上图为对应位置满足的解的个数，可以找出各数之间的规律，利用递归（效率低）和迭代的方法写出</p><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><h2 id="迭代"><a href="#迭代" class="headerlink" title="迭代"></a>迭代</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#define N 10000</span><br><span class="line">int operate(int n);</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int n;</span><br><span class="line">    scanf(&quot;%d&quot;,&amp;n);</span><br><span class="line">    printf(&quot;%d&quot;,operate(n));</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line">int operate(int n)</span><br><span class="line">&#123;</span><br><span class="line">    int a[N]=&#123;0,1&#125;;</span><br><span class="line">    int i,j;</span><br><span class="line">    for(i=2;i&lt;=n;i++)&#123;</span><br><span class="line">        for(j=1;j&lt;=i/2;j++)&#123;</span><br><span class="line">            a[i]=a[i]+a[j];</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        a[i]++;</span><br><span class="line">    &#125;</span><br><span class="line">    return a[n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><p>主函数与上述相同</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">int operate(int n)</span><br><span class="line">&#123;</span><br><span class="line">    if(n==1)&#123;</span><br><span class="line">        return 1;</span><br><span class="line">    &#125;</span><br><span class="line">    else if(n==2)&#123;</span><br><span class="line">        return 2;</span><br><span class="line">    &#125;</span><br><span class="line">    else if(n%2==1)&#123;</span><br><span class="line">        return operate(n-1);</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        return operate(n-1)+operate(n/2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>P1024一元三次方程求解</title>
    <link href="http://example.com/2023/08/08/P1024%E4%B8%80%E5%85%83%E4%B8%89%E6%AC%A1%E6%96%B9%E7%A8%8B%E6%B1%82%E8%A7%A3/"/>
    <id>http://example.com/2023/08/08/P1024%E4%B8%80%E5%85%83%E4%B8%89%E6%AC%A1%E6%96%B9%E7%A8%8B%E6%B1%82%E8%A7%A3/</id>
    <published>2023-08-08T06:12:08.000Z</published>
    <updated>2023-08-08T06:16:45.933Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="NOIP2001-提高组-一元三次方程求解"><a href="#NOIP2001-提高组-一元三次方程求解" class="headerlink" title="[NOIP2001 提高组] 一元三次方程求解"></a>[NOIP2001 提高组] 一元三次方程求解</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>有形如：$a x^3 + b x^2 + c x + d &#x3D; 0$  这样的一个一元三次方程。给出该方程中各项的系数（$a,b,c,d$ 均为实数），并约定该方程存在三个不同实根（根的范围在 $-100$ 至 $100$ 之间），且根与根之差的绝对值 $\ge 1$。要求由小到大依次在同一行输出这三个实根(根与根之间留有空格)，并精确到小数点后 $2$ 位。</p><p>提示：记方程 $f(x) &#x3D; 0$，若存在 $2$ 个数 $x_1$ 和 $x_2$，且 $x_1 &lt; x_2$，$f(x_1) \times f(x_2) &lt; 0$，则在 $(x_1, x_2)$ 之间一定有一个根。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>一行，$4$ 个实数 $a, b, c, d$。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>一行，$3$ 个实根，从小到大输出，并精确到小数点后 $2$ 位。</p><h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例 #1"></a>样例 #1</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入 #1"></a>样例输入 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 -5 -4 20</span><br></pre></td></tr></table></figure><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出 #1"></a>样例输出 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-2.00 2.00 5.00</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p><strong>【题目来源】</strong></p><p>NOIP 2001 提高组第一题</p><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><h2 id="解题关键"><a href="#解题关键" class="headerlink" title="解题关键"></a>解题关键</h2><p>题目中给出两个根的绝对值之差大于1，所以不存在两个整数为正但是其中有解的情况</p><h2 id="主要思路"><a href="#主要思路" class="headerlink" title="主要思路"></a>主要思路</h2><p>二分法搜索解的具体范围</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">void compare1(double a,double b,double c,double d,int mode,double num[3])</span><br><span class="line">&#123;</span><br><span class="line">    int x=0;</span><br><span class="line">    double i=-100,left,right;</span><br><span class="line">    while(mode!=3)&#123;</span><br><span class="line">        if(change(a,b,c,d,i)==0)&#123;</span><br><span class="line">            num[mode]=i;</span><br><span class="line">            mode++;</span><br><span class="line">        &#125;</span><br><span class="line">        if(change(a,b,c,d,i)*change(a,b,c,d,i+1)&lt;0)&#123;</span><br><span class="line">            left=i;</span><br><span class="line">            right=i+1;</span><br><span class="line">            while(right-left&gt;0.001&amp;&amp;x==0)&#123;</span><br><span class="line">                if(change(a,b,c,d,left)*change(a,b,c,d,(left+right)/2)&lt;0)&#123;</span><br><span class="line">                    right=(left+right)/2;</span><br><span class="line">                &#125;</span><br><span class="line">                else if(change(a,b,c,d,left)*change(a,b,c,d,(left+right)/2)&gt;0)&#123;</span><br><span class="line">                    left=(left+right)/2;</span><br><span class="line">                &#125;</span><br><span class="line">                else if(change(a,b,c,d,left)==0)&#123;</span><br><span class="line">                    num[mode]=left;</span><br><span class="line">                    mode++;</span><br><span class="line">                    x=1;</span><br><span class="line">                &#125;</span><br><span class="line">                else&#123;</span><br><span class="line">                    num[mode]=right;</span><br><span class="line">                    mode++;</span><br><span class="line">                    x=1;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            if(x==0)&#123;</span><br><span class="line">                num[mode]=left;</span><br><span class="line">                mode++;</span><br><span class="line">            &#125;</span><br><span class="line">            x=0;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;math.h&gt;</span><br><span class="line">void compare1(double a,double b,double c,double d,int mode,double num[3]);</span><br><span class="line">double change(double a,double b,double c,double d,double n);</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int mode=0,i;</span><br><span class="line">    double a,b,c,d;</span><br><span class="line">    double num[3]=&#123;0&#125;;</span><br><span class="line">    scanf(&quot;%lf%lf%lf%lf&quot;,&amp;a,&amp;b,&amp;c,&amp;d);</span><br><span class="line">    compare1(a,b,c,d,mode,num);</span><br><span class="line">    for(i=0;i&lt;2;i++)&#123;</span><br><span class="line">        printf(&quot;%.2lf &quot;,num[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    printf(&quot;%.2lf\n&quot;,num[2]);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line">double change(double a,double b,double c,double d,double x)</span><br><span class="line">&#123;</span><br><span class="line">    return a*pow(x,3)+b*pow(x,2)+c*x+d;</span><br><span class="line">&#125;</span><br><span class="line">void compare1(double a,double b,double c,double d,int mode,double num[3])</span><br><span class="line">&#123;</span><br><span class="line">    int x=0;</span><br><span class="line">    double i=-100,left,right;</span><br><span class="line">    while(mode!=3)&#123;</span><br><span class="line">        if(change(a,b,c,d,i)==0)&#123;</span><br><span class="line">            num[mode]=i;</span><br><span class="line">            mode++;</span><br><span class="line">        &#125;</span><br><span class="line">        if(change(a,b,c,d,i)*change(a,b,c,d,i+1)&lt;0)&#123;</span><br><span class="line">            left=i;</span><br><span class="line">            right=i+1;</span><br><span class="line">            while(right-left&gt;0.001&amp;&amp;x==0)&#123;</span><br><span class="line">                if(change(a,b,c,d,left)*change(a,b,c,d,(left+right)/2)&lt;0)&#123;</span><br><span class="line">                    right=(left+right)/2;</span><br><span class="line">                &#125;</span><br><span class="line">                else if(change(a,b,c,d,left)*change(a,b,c,d,(left+right)/2)&gt;0)&#123;</span><br><span class="line">                    left=(left+right)/2;</span><br><span class="line">                &#125;</span><br><span class="line">                else if(change(a,b,c,d,left)==0)&#123;</span><br><span class="line">                    num[mode]=left;</span><br><span class="line">                    mode++;</span><br><span class="line">                    x=1;</span><br><span class="line">                &#125;</span><br><span class="line">                else&#123;</span><br><span class="line">                    num[mode]=right;</span><br><span class="line">                    mode++;</span><br><span class="line">                    x=1;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            if(x==0)&#123;</span><br><span class="line">                num[mode]=left;</span><br><span class="line">                mode++;</span><br><span class="line">            &#125;</span><br><span class="line">            x=0;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>P1012拼数</title>
    <link href="http://example.com/2023/08/08/P1012%E6%8B%BC%E6%95%B0/"/>
    <id>http://example.com/2023/08/08/P1012%E6%8B%BC%E6%95%B0/</id>
    <published>2023-08-08T04:09:34.000Z</published>
    <updated>2023-08-08T06:04:14.694Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="NOIP1998-提高组-拼数"><a href="#NOIP1998-提高组-拼数" class="headerlink" title="[NOIP1998 提高组] 拼数"></a>[NOIP1998 提高组] 拼数</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>设有 $n$ 个正整数 $a_1 \dots a_n$，将它们联接成一排，相邻数字首尾相接，组成一个最大的整数。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>第一行有一个整数，表示数字个数 $n$。</p><p>第二行有 $n$ 个整数，表示给出的 $n$ 个整数 $a_i$。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>一个正整数，表示最大的整数</p><h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例 #1"></a>样例 #1</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入 #1"></a>样例输入 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">13 312 343</span><br></pre></td></tr></table></figure><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出 #1"></a>样例输出 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">34331213</span><br></pre></td></tr></table></figure><h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例 #2"></a>样例 #2</h2><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入 #2"></a>样例输入 #2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">7 13 4 246</span><br></pre></td></tr></table></figure><h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出 #2"></a>样例输出 #2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7424613</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>对于全部的测试点，保证 $1 \leq n \leq 20$，$1 \leq a_i \leq 10^9$。</p><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><p>先比较最高位数，若最高位数相等，再比较下一位，考虑到两数位数不同的情况</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">for(i=0;i&lt;n-1;i++)&#123;</span><br><span class="line">    for(j=n-1;j&gt;i;j--)&#123;</span><br><span class="line">        p=a[j];</span><br><span class="line">        q=a[j-1];</span><br><span class="line">        while((q/10!=0||q%10!=0)&amp;&amp;(p/10!=0||p%10!=0))&#123;</span><br><span class="line">            if(begin(p)&gt;begin(q))&#123;</span><br><span class="line">                x=a[j];</span><br><span class="line">                a[j]=a[j-1];</span><br><span class="line">                a[j-1]=x;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">            else if(begin(p)==begin(q))&#123;</span><br><span class="line">                q=lose(q);</span><br><span class="line">                p=lose(p);</span><br><span class="line">            &#125;</span><br><span class="line">            else if(begin(p)&lt;begin(q))&#123;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        if((q==0&amp;&amp;begin(p)&gt;begin(a[i]))||(p==0&amp;&amp;begin(q)&lt;begin(a[i-1])))&#123;</span><br><span class="line">            x=a[j];</span><br><span class="line">            a[j]=a[j-1];</span><br><span class="line">            a[j-1]=x;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="代码展示"><a href="#代码展示" class="headerlink" title="代码展示"></a>代码展示</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#define N 20</span><br><span class="line">int begin(int a);</span><br><span class="line">int len(int a);</span><br><span class="line">int lose(int a);</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int n,i,j,x,p,q;</span><br><span class="line">    long num;</span><br><span class="line">    int a[N]=&#123;0&#125;;</span><br><span class="line">    scanf(&quot;%d&quot;,&amp;n);</span><br><span class="line">    for(i=0;i&lt;n;i++)&#123;</span><br><span class="line">        scanf(&quot;%d&quot;,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    for(i=0;i&lt;n-1;i++)&#123;</span><br><span class="line">        for(j=n-1;j&gt;i;j--)&#123;</span><br><span class="line">            p=a[j];</span><br><span class="line">            q=a[j-1];</span><br><span class="line">            while((q/10!=0||q%10!=0)&amp;&amp;(p/10!=0||p%10!=0))&#123;</span><br><span class="line">                if(begin(p)&gt;begin(q))&#123;</span><br><span class="line">                    x=a[j];</span><br><span class="line">                    a[j]=a[j-1];</span><br><span class="line">                    a[j-1]=x;</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">                else if(begin(p)==begin(q))&#123;</span><br><span class="line">                    q=lose(q);</span><br><span class="line">                    p=lose(p);</span><br><span class="line">                &#125;</span><br><span class="line">                else if(begin(p)&lt;begin(q))&#123;</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            if((q==0&amp;&amp;begin(p)&gt;begin(a[i]))||(p==0&amp;&amp;begin(q)&lt;begin(a[i-1])))&#123;</span><br><span class="line">                x=a[j];</span><br><span class="line">                a[j]=a[j-1];</span><br><span class="line">                a[j-1]=x;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    for(i=0;i&lt;n;i++)&#123;</span><br><span class="line">        printf(&quot;%d&quot;,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line">int begin(int a)</span><br><span class="line">&#123;</span><br><span class="line">    int i,x=1;</span><br><span class="line">    for(i=1;i&lt;len(a);i++)&#123;</span><br><span class="line">        x=x*10;</span><br><span class="line">    &#125;</span><br><span class="line">    return a/x;//整数的最高位的值</span><br><span class="line">&#125;</span><br><span class="line">int len(int a)</span><br><span class="line">&#123;</span><br><span class="line">    int x=1;</span><br><span class="line">    while(a/10&gt;0)&#123;</span><br><span class="line">        a=a/10;</span><br><span class="line">        x++;</span><br><span class="line">    &#125;</span><br><span class="line">    return x;//整数的位数</span><br><span class="line">&#125;</span><br><span class="line">int lose(int a)</span><br><span class="line">&#123;</span><br><span class="line">    int i,x=1;</span><br><span class="line">    for(i=1;i&lt;len(a);i++)&#123;</span><br><span class="line">        x=x*10;</span><br><span class="line">    &#125;</span><br><span class="line">    return a%x;//整数去掉最高位的值</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>P1256显示图像</title>
    <link href="http://example.com/2023/07/22/P1256%E6%98%BE%E7%A4%BA%E5%9B%BE%E5%83%8F/"/>
    <id>http://example.com/2023/07/22/P1256%E6%98%BE%E7%A4%BA%E5%9B%BE%E5%83%8F/</id>
    <published>2023-07-22T15:30:37.000Z</published>
    <updated>2023-08-08T03:57:52.090Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="显示图像"><a href="#显示图像" class="headerlink" title="显示图像"></a>显示图像</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>古老的显示屏是由 $N \times M$ 个像素（Pixel）点组成的。一个像素点的位置是根据所在行数和列数决定的。例如 $P(2,1)$ 表示第 $2$ 行第 $1$ 列的像素点。那时候，屏幕只能显示黑与白两种颜色，人们用二进制 $0$ 和 $1$ 来表示。$0$ 表示黑色，$1$ 表示白色。当计算机发出一个指令：$P(x,y)&#x3D;1$，则屏幕上的第 $x$ 行第 $y$ 列的阴极射线管就开始工作，使该像素点显示白色，若 $P(x,y)&#x3D;0$，则对应位置的阴极射线管不工作，像素点保持黑色。在某一单位时刻，计算机以 $N \times M$ 二维 $01$ 矩阵的方式发出显示整个屏幕图像的命令。</p><p>例如，屏幕是由 $3 \times 4$ 的像素点组成，在某单位时刻，计算机发出如下命令：</p><p>$$\begin{pmatrix}<br>0 &amp; 0 &amp; 0 &amp; 1 \<br>0 &amp; 0 &amp; 1 &amp; 1 \<br>0 &amp; 1 &amp; 1 &amp; 0 \<br>\end{pmatrix}$$</p><p>对应屏幕显示应为：</p><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/17pfiqr1.png"></p><p>假设放大后，一个格子表示一个像素点。</p><p>由于未知的原因，显示黑色的像素点总是受显示白色的像素点的影响——可能是阴极射线管工作的作用。并且，距离越近，影响越大。这里的距离定义如下：</p><p>设有像素点 $P_1(x_1,y_1)$ 和像素点 $P_2(x_2,y_2)$，则它们之间的距离 $D(P_1,P_2)&#x3D;|x_1-x_2|+|y_1-y_2|$。</p><p>在某一时刻，计算机发出显示命令后，科学家们期望知道，每个像素点和其最近的显示白色的像素点之间的最短距离是多少——科学家们保证屏幕上至少有一个显示白色的像素点。</p><p>上面的例子中，像素 $P(1,1)$ 与最近的白色像素点之间的距离为 $3$，而像素 $P(3,2)$ 本身显示白色，所以最短距离为 $0$。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>第一行有两个数字，$N$ 和 $M\ (1 \le N,M \le 182)$，表示屏幕的规格。</p><p>以下 $N$ 行，每行 $M$ 个数字，$0$ 或 $1$。为计算机发出的显示命令。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出文件有 $N$ 行，每行 $M$ 个数字，中间用 $1$ 个空格分开。第 $i$ 行第 $j$ 列的数字表示距像素点 $P(i,j)$ 最近的白色像素点的最短距离。</p><h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例 #1"></a>样例 #1</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入 #1"></a>样例输入 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3 4</span><br><span class="line">0001</span><br><span class="line">0011</span><br><span class="line">0110</span><br></pre></td></tr></table></figure><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出 #1"></a>样例输出 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3 2 1 0</span><br><span class="line">2 1 0 0</span><br><span class="line">1 0 0 1</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><ul><li>对于 $30%$ 的数据：$N\times M \le 10000$；</li><li>对于 $100%$ 的数据：$N\times M \le 182^2$。</li></ul><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><h2 id="解题关键"><a href="#解题关键" class="headerlink" title="解题关键"></a>解题关键</h2><p>以字符串数组的形式读入数据，并将数据拆分写入二维整型数组中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">for(i=0;i&lt;N;i++)&#123;</span><br><span class="line">    scanf(&quot;%s&quot;,&amp;ch[i]); //%s输入字符串</span><br><span class="line">&#125;</span><br><span class="line">for(i=0;i&lt;N;i++)&#123;</span><br><span class="line">    for(j=0;j&lt;M;j++)&#123;</span><br><span class="line">        A[i][j]=ch[i][j]-48;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="主要思路"><a href="#主要思路" class="headerlink" title="主要思路"></a>主要思路</h2><p>将输入为1的位置标记为0，用二维整型数组B储存遍历每一个1时所有格子应标记的值，用二维整型数组C储存最终的值，将数组B中对应位置的值与数组C中比较，若B中的值小于C中的值，则将C中的值改为B中的值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">for(i=0;i&lt;N;i++)&#123;</span><br><span class="line">    for(j=0;j&lt;M;j++)&#123;</span><br><span class="line">        if(A[i][j]==1)&#123;</span><br><span class="line">            for(a=0;a&lt;N;a++)&#123;</span><br><span class="line">                for(b=0;b&lt;M;b++)&#123;</span><br><span class="line">                    if(a&lt;=i&amp;&amp;b&lt;=j)&#123;</span><br><span class="line">                        B[a][b]=i+j-a-b;</span><br><span class="line">                    &#125;</span><br><span class="line">                    if(a&gt;=i&amp;&amp;b&lt;=j)&#123;</span><br><span class="line">                        B[a][b]=a-i+j-b;</span><br><span class="line">                    &#125;</span><br><span class="line">                    if(a&lt;=i&amp;&amp;b&gt;=j)&#123;</span><br><span class="line">                        B[a][b]=i-a+b-j;</span><br><span class="line">                    &#125;</span><br><span class="line">                    if(a&gt;=i&amp;&amp;b&gt;=j)&#123;</span><br><span class="line">                        B[a][b]=a-i+b-j;</span><br><span class="line">                    &#125;</span><br><span class="line">                    if(B[a][b]&lt;C[a][b])&#123;</span><br><span class="line">                        C[a][b]=B[a][b];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#define n 182</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int N,M,i,j,a,b,x,y;</span><br><span class="line">    int A[n][n]=&#123;0&#125;;</span><br><span class="line">    int C[n][n];</span><br><span class="line">    int B[n][n]=&#123;0&#125;;</span><br><span class="line">    char ch[n][n];</span><br><span class="line">    scanf(&quot;%d%d&quot;,&amp;N,&amp;M);</span><br><span class="line">    for(i=0;i&lt;N;i++)&#123;</span><br><span class="line">        scanf(&quot;%s&quot;,&amp;ch[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    for(i=0;i&lt;N;i++)&#123;</span><br><span class="line">        for(j=0;j&lt;M;j++)&#123;</span><br><span class="line">            A[i][j]=ch[i][j]-48;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    for(i=0;i&lt;N;i++)&#123;</span><br><span class="line">        for(j=0;j&lt;M;j++)&#123;</span><br><span class="line">            if(A[i][j]==1)&#123;</span><br><span class="line">                C[i][j]=0;</span><br><span class="line">            &#125;</span><br><span class="line">            else&#123;</span><br><span class="line">                C[i][j]=33124;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    for(i=0;i&lt;N;i++)&#123;</span><br><span class="line">        for(j=0;j&lt;M;j++)&#123;</span><br><span class="line">            if(A[i][j]==1)&#123;</span><br><span class="line">                for(a=0;a&lt;N;a++)&#123;</span><br><span class="line">                    for(b=0;b&lt;M;b++)&#123;</span><br><span class="line">                        if(a&lt;=i&amp;&amp;b&lt;=j)&#123;</span><br><span class="line">                            B[a][b]=i+j-a-b;</span><br><span class="line">                        &#125;</span><br><span class="line">                        if(a&gt;=i&amp;&amp;b&lt;=j)&#123;</span><br><span class="line">                            B[a][b]=a-i+j-b;</span><br><span class="line">                        &#125;</span><br><span class="line">                        if(a&lt;=i&amp;&amp;b&gt;=j)&#123;</span><br><span class="line">                            B[a][b]=i-a+b-j;</span><br><span class="line">                        &#125;</span><br><span class="line">                        if(a&gt;=i&amp;&amp;b&gt;=j)&#123;</span><br><span class="line">                            B[a][b]=a-i+b-j;</span><br><span class="line">                        &#125;</span><br><span class="line">                        if(B[a][b]&lt;C[a][b])&#123;</span><br><span class="line">                            C[a][b]=B[a][b];</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    for(i=0;i&lt;N-1;i++)&#123;</span><br><span class="line">        for(j=0;j&lt;M-1;j++)&#123;</span><br><span class="line">            printf(&quot;%d &quot;,C[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">        printf(&quot;%d\n&quot;,C[i][j]);</span><br><span class="line">    &#125;</span><br><span class="line">    for(j=0;j&lt;M-1;j++)&#123;</span><br><span class="line">        printf(&quot;%d &quot;,C[i][j]);</span><br><span class="line">    &#125;</span><br><span class="line">    printf(&quot;%d&quot;,C[i][j]);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>P1003铺地毯</title>
    <link href="http://example.com/2023/07/22/P1003%E9%93%BA%E5%9C%B0%E6%AF%AF/"/>
    <id>http://example.com/2023/07/22/P1003%E9%93%BA%E5%9C%B0%E6%AF%AF/</id>
    <published>2023-07-22T15:29:39.000Z</published>
    <updated>2023-08-07T10:29:48.238Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="NOIP2011-提高组-铺地毯"><a href="#NOIP2011-提高组-铺地毯" class="headerlink" title="[NOIP2011 提高组] 铺地毯"></a>[NOIP2011 提高组] 铺地毯</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>为了准备一个独特的颁奖典礼，组织者在会场的一片矩形区域（可看做是平面直角坐标系的第一象限）铺上一些矩形地毯。一共有 $n$ 张地毯，编号从 $1$ 到 $n$。现在将这些地毯按照编号从小到大的顺序平行于坐标轴先后铺设，后铺的地毯覆盖在前面已经铺好的地毯之上。</p><p>地毯铺设完成后，组织者想知道覆盖地面某个点的最上面的那张地毯的编号。注意：在矩形地毯边界和四个顶点上的点也算被地毯覆盖。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入共 $n + 2$ 行。</p><p>第一行，一个整数 $n$，表示总共有 $n$ 张地毯。</p><p>接下来的 $n$ 行中，第 $i+1$ 行表示编号 $i$ 的地毯的信息，包含四个整数 $a ,b ,g ,k$，每两个整数之间用一个空格隔开，分别表示铺设地毯的左下角的坐标 $(a, b)$ 以及地毯在 $x$ 轴和 $y$ 轴方向的长度。</p><p>第 $n + 2$ 行包含两个整数 $x$ 和 $y$，表示所求的地面的点的坐标 $(x, y)$。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出共 $1$ 行，一个整数，表示所求的地毯的编号；若此处没有被地毯覆盖则输出 <code>-1</code>。</p><h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例 #1"></a>样例 #1</h2><h3 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入 #1"></a>样例输入 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">1 0 2 3</span><br><span class="line">0 2 3 3</span><br><span class="line">2 1 3 3</span><br><span class="line">2 2</span><br></pre></td></tr></table></figure><h3 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出 #1"></a>样例输出 #1</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例 #2"></a>样例 #2</h2><h3 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入 #2"></a>样例输入 #2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">1 0 2 3</span><br><span class="line">0 2 3 3</span><br><span class="line">2 1 3 3</span><br><span class="line">4 5</span><br></pre></td></tr></table></figure><h3 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出 #2"></a>样例输出 #2</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1</span><br></pre></td></tr></table></figure><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>【样例解释 1】</p><p>如下图，$1$ 号地毯用实线表示，$2$ 号地毯用虚线表示，$3$ 号用双实线表示，覆盖点 $(2,2)$ 的最上面一张地毯是 $3$ 号地毯。</p><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/gcm3ne0q.png"></p><p>【数据范围】</p><p>对于 $30%$ 的数据，有 $n \le 2$。<br>对于 $50%$ 的数据，$0 \le a, b, g, k \le 100$。<br>对于 $100%$ 的数据，有 $0 \le n \le 10^4$, $0 \le a, b, g, k \le {10}^5$。   </p><p>noip2011 提高组 day1 第 $1$ 题。</p><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><h2 id="解题关键"><a href="#解题关键" class="headerlink" title="解题关键"></a>解题关键</h2><p>创建结构体数组储存地毯长度、坐标有关信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">struct location&#123;</span><br><span class="line">    int a; //地毯左下角横坐标</span><br><span class="line">    int b; //地毯左下角纵坐标</span><br><span class="line">    int c; //地毯在横坐标的长度</span><br><span class="line">    int d; //地毯在纵坐标的长度</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="主要思路"><a href="#主要思路" class="headerlink" title="主要思路"></a>主要思路</h2><p>从最上面一层地毯开始查找，若坐标在本次地毯包含范围之内，输出地毯层数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">for(i=n;i&gt;0;i--)&#123;</span><br><span class="line">    if(x&gt;=l[i].a&amp;&amp;x&lt;=l[i].a+l[i].c&amp;&amp;y&gt;=l[i].b&amp;&amp;y&lt;=l[i].b+l[i].d)&#123;</span><br><span class="line">        printf(&quot;%d\n&quot;,i);</span><br><span class="line">        mode=0;</span><br><span class="line">        break;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#define N 100000</span><br><span class="line">struct location&#123;</span><br><span class="line">    int a;</span><br><span class="line">    int b;</span><br><span class="line">    int c;</span><br><span class="line">    int d;</span><br><span class="line">&#125;;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    struct location l[N];</span><br><span class="line">    int n,i,x,y,mode=1;</span><br><span class="line">    scanf(&quot;%d&quot;,&amp;n);</span><br><span class="line">    for(i=1;i&lt;=n;i++)&#123;</span><br><span class="line">        scanf(&quot;%d%d%d%d&quot;,&amp;l[i].a,&amp;l[i].b,&amp;l[i].c,&amp;l[i].d);</span><br><span class="line">    &#125;</span><br><span class="line">    scanf(&quot;%d%d&quot;,&amp;x,&amp;y);</span><br><span class="line">    for(i=n;i&gt;0;i--)&#123;</span><br><span class="line">        if(x&gt;=l[i].a&amp;&amp;x&lt;=l[i].a+l[i].c&amp;&amp;y&gt;=l[i].b&amp;&amp;y&lt;=l[i].b+l[i].d)&#123;</span><br><span class="line">            printf(&quot;%d\n&quot;,i);</span><br><span class="line">            mode=0;</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if(mode==1)&#123;</span><br><span class="line">        printf(&quot;-1\n&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;&#92;assets&#92;css&#92;APlayer.min.css&quot;&gt;&lt;script src=&quot;&#92;assets&#92;js&#92;APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
</feed>
